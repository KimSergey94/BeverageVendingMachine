// <auto-generated />
using System;
using BeverageVendingMachine.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BeverageVendingMachine.Infrastructure.Migrations
{
    [DbContext(typeof(BeverageVendingMachineContext))]
    [Migration("20230626135609_CoinOperationStorageItem")]
    partial class CoinOperationStorageItem
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BeverageVendingMachine.Core.Entities.CoinDenomination", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DepositedQuantity")
                        .HasColumnType("int");

                    b.Property<bool>("IsBlocked")
                        .HasColumnType("bit");

                    b.Property<int>("StorageQuantity")
                        .HasColumnType("int");

                    b.Property<decimal>("Value")
                        .HasPrecision(4, 2)
                        .HasColumnType("decimal(4,2)");

                    b.HasKey("Id");

                    b.ToTable("CoinDenominations");
                });

            modelBuilder.Entity("BeverageVendingMachine.Core.Entities.CoinOperation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CoinDenominationId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeposited")
                        .HasColumnType("bit");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int?>("StorageItemId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CoinDenominationId");

                    b.HasIndex("StorageItemId");

                    b.ToTable("CoinOperations");
                });

            modelBuilder.Entity("BeverageVendingMachine.Core.Entities.StorageItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Cost")
                        .HasPrecision(6, 2)
                        .HasColumnType("decimal(6,2)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StorageQuantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("StorageItems");
                });

            modelBuilder.Entity("BeverageVendingMachine.Core.Entities.CoinOperation", b =>
                {
                    b.HasOne("BeverageVendingMachine.Core.Entities.CoinDenomination", "CoinDenomination")
                        .WithMany()
                        .HasForeignKey("CoinDenominationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BeverageVendingMachine.Core.Entities.StorageItem", "StorageItem")
                        .WithMany()
                        .HasForeignKey("StorageItemId");

                    b.Navigation("CoinDenomination");

                    b.Navigation("StorageItem");
                });
#pragma warning restore 612, 618
        }
    }
}
